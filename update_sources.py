import os

def get_files_recursive(path='.', extension='.cpp'):
    result = []
    for entry in os.listdir(path):
        full_path = os.path.join(path, entry)
        if os.path.isdir(full_path):
            result.extend(get_files_recursive(full_path))
        else:
            _, file_extension = os.path.splitext(full_path)
            if file_extension == extension:
                result.append(full_path) 
    return result

def write_file_list(lines, files, begin_marker, end_marker):
    """
    Update a list of files in a CMake file either within or after a marked block.
    
    Args:
        lines: List of strings containing the file contents
        files: List of file paths to write
        begin_marker: Start marker for the block (optional if after_block=True)
        end_marker: End marker for the block
    """
    start_idx = lines.index(begin_marker + "\n") + 1
    end_idx = lines.index(end_marker + "\n")
    lines[start_idx:end_idx] = [f'    "{file.replace("\\","/")}"\n' for file in files]
    return lines



# Generate the target source list
generated_file = "generated_sources.cmake"
with open(generated_file, "r") as f:
    lines = f.readlines()

# Retrieve files
sources = get_files_recursive("source")
externals = get_files_recursive("external")

# Update source files (between markers)
lines = write_file_list(
    lines, 
    sources,
    "# AUTOGENERATED SOURCE BEGIN",
    "# AUTOGENERATED SOURCE END"
)

# Update external files (after block)
lines = write_file_list(
    lines, 
    externals,
    "# AUTOGENERATED EXTERNAL BEGIN",
    "# AUTOGENERATED EXTERNAL END"
)

# Write back to the file
with open(generated_file, "w") as f:
    f.writelines(lines)